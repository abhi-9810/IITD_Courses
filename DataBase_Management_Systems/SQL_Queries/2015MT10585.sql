SELECT player_name FROM player WHERE country_name='England' AND batting_hand='Left-hand bat' ORDER BY player_name
WITH inform AS( SELECT CAST(EXTRACT(YEAR from AGE('2018-12-02',dob)) AS INT) as "age" ,player_name,bowling_skill FROM player) SELECT player_name,age FROM inform WHERE bowling_skill = 'Legbreak googly' AND age >27 ORDER BY age DESC,player_name;
SELECT match_id,toss_winner FROM match WHERE toss_decision='bat' ORDER BY match_id
WITH temp1 AS (SELECT over_id,innings_no, SUM(runs_scored) AS runs_scored FROM batsman_scored WHERE match_id='335987' GROUP BY over_id,innings_no),temp2 AS(SELECT over_id,innings_no, SUM(extra_runs) AS runs_scored1 FROM extra_runs WHERE match_id='335987' GROUP BY over_id,innings_no ), temp3 AS (SELECT temp1.over_id,temp1.innings_no,temp1.runs_scored AS runs_scored2,CASE WHEN temp2.runs_scored1 is NULL THEN 0 ELSE temp2.runs_scored1 END AS runs_scored1 FROM temp1 LEFT OUTER JOIN temp2 ON temp1.over_id=temp2.over_id AND temp1.innings_no=temp2.innings_no),temp4 AS(SELECT over_id,innings_no,(runs_scored2+runs_scored1)AS runs_scored FROM temp3 ) SELECT over_id,runs_scored FROM temp4 WHERE runs_scored<=7 ORDER BY runs_scored DESC, over_id 
SELECT DISTINCT player.player_name FROM player INNER JOIN wicket_taken ON player.player_id=wicket_taken.player_out WHERE wicket_taken.kind_out='bowled' ORDER BY player.player_name
SELECT match.match_id,t1.name,t2.name,t3.name,match.win_margin FROM match INNER JOIN team t1 ON match.team_1 = t1.team_id INNER JOIN team t2 ON match.team_2 = t2.team_id INNER JOIN team t3 ON match.match_winner = t3.team_id WHERE match.win_margin >= 60 ORDER BY match.win_margin,match.match_id;
WITH inform AS (SELECT EXTRACT(YEAR from AGE('2018-12-02', dob)) as "age", player_name, batting_hand FROM player) SELECT player_name FROM inform WHERE batting_hand = 'Left-hand bat' AND age < 30 ORDER BY player_name;
WITH temp1 AS (SELECT match_id,SUM(runs_scored)AS r1 FROM batsman_scored GROUP BY match_id), temp2 AS (SELECT match_id,SUM(extra_runs) AS r2 FROM extra_runs GROUP BY match_id) SELECT temp1.match_id,(temp1.r1+temp2.r2) AS runs_scored FROM temp1 INNER JOIN temp2 ON temp1.match_id=temp2.match_id ORDER BY temp1.match_id
WITH temp1 AS(SELECT ball_by_ball.match_id AS match_id,ball_by_ball.over_id AS over_id,ball_by_ball.ball_id AS ball_id,ball_by_ball.innings_no AS innings_no,ball_by_ball.bowler AS player_id,batsman_scored.runs_scored FROM ball_by_ball INNER JOIN batsman_scored ON ball_by_ball.match_id=batsman_scored.match_id AND ball_by_ball.over_id=batsman_scored.over_id AND ball_by_ball.ball_id=batsman_scored.ball_id AND ball_by_ball.innings_no=batsman_scored.innings_no),extra AS (SELECT over_id,match_id,innings_no,SUM(extra_runs) AS extra_runs FROM extra_runs GROUP BY over_id,match_id,innings_no),temp2 AS (SELECT over_id,SUM(runs_scored) AS score,innings_no,match_id,player_id FROM temp1 GROUP BY over_id,match_id,innings_no,player_id),extra1 AS (SELECT temp2.over_id,temp2.match_id,temp2.innings_no,temp2.player_id,temp2.score AS score,CASE WHEN extra.extra_runs is NULL THEN 0 ELSE extra.extra_runs END AS score1 FROM temp2 LEFT OUTER JOIN extra ON extra.match_id=temp2.match_id AND extra.over_id=temp2.over_id AND extra.innings_no=temp2.innings_no),extra11 AS(SELECT over_id, match_id,innings_no,player_id,(score+score1) AS score FROM extra1), temp3 AS (SELECT match_id,MAX(score) AS maximum_runs FROM extra11 GROUP BY match_id ORDER BY match_id),temp4 AS (SELECT extra11.match_id,temp3.maximum_runs,extra11.player_id,extra11.over_id FROM extra11 INNER JOIN temp3 ON extra11.match_id=temp3.match_id AND extra11.score=temp3.maximum_runs ORDER BY extra11.match_id,extra11.over_id) SELECT temp4.match_id,temp4.maximum_runs,player.player_name FROM temp4 INNER JOIN player ON player.player_id=temp4.player_id ORDER BY temp4.match_id,temp4.over_id
WITH temp1 AS (SELECT player_out, COUNT(kind_out) AS number FROM wicket_taken WHERE kind_out='run out' GROUP BY player_out),temp2 AS( SELECT player.player_name,CASE WHEN temp1.number is NULL THEN 0 ELSE temp1.number END AS number   FROM player LEFT OUTER JOIN temp1 ON player.player_id=temp1.player_out ORDER BY temp1.number DESC,player.player_name) SELECT temp2.player_name,temp2.number FROM temp2 ORDER BY temp2.number DESC,temp2.player_name
SELECT kind_out, COUNT(kind_out) AS number FROM wicket_taken GROUP BY kind_out ORDER BY number DESC, kind_out
WITH temp1 AS (SELECT player_match.team_id AS team,match.man_of_the_match AS number FROM match INNER JOIN player_match ON player_match.player_id=match.man_of_the_match AND player_match.match_id=match.match_id),temp2 AS(SELECT temp1.team AS name ,COUNT(number) AS number FROM temp1 GROUP BY temp1.team) SELECT team.name AS name ,temp2.number AS number FROM temp2 INNER JOIN team ON temp2.name=team.team_id ORDER BY name
WITH temp1 AS (SELECT match_id, COUNT(extra_runs) AS runs FROM extra_runs WHERE extra_type='wides' GROUP BY match_id),temp2 AS(SELECT match.venue AS venue,temp1.runs AS runs FROM match INNER JOIN temp1 ON match.match_id=temp1.match_id),temp3 AS (SELECT temp2.venue AS venue,SUM(temp2.runs) AS runs FROM temp2 GROUP BY temp2.venue)  SELECT venue FROM temp3 ORDER BY temp3.runs DESC LIMIT 1
WITH temp1 AS (SELECT CASE WHEN team_1 = toss_winner AND toss_decision='field' or team_2=toss_winner AND toss_decision ='bat' THEN team_1 ELSE team_2 END AS  bowl,match_winner,venue FROM match),temp2 AS (SELECT venue, COUNT(*) AS number FROM temp1 WHERE bowl=match_winner GROUP BY venue) SELECT venue FROM temp2 ORDER BY number DESC,venue
WITH temp1 AS (SELECT batsman_scored.runs_scored,ball_by_ball.bowler,batsman_scored.over_id,batsman_scored.ball_id,batsman_scored.match_id,batsman_scored.innings_no FROM ball_by_ball INNER JOIN batsman_scored ON batsman_scored.over_id=ball_by_ball.over_id AND batsman_scored.match_id=ball_by_ball.match_id AND batsman_scored.ball_id=ball_by_ball.ball_id AND batsman_scored.innings_no=ball_by_ball.innings_no), temp2 AS (SELECT temp1.runs_scored,temp1.bowler,temp1.over_id,temp1.ball_id,temp1.match_id,temp1.innings_no,CASE WHEN extra_runs.extra_runs is NULL THEN 0 ELSE extra_runs.extra_runs END AS extra_runs FROM temp1 LEFT OUTER JOIN extra_runs ON temp1.over_id=extra_runs.over_id AND temp1.match_id=extra_runs.match_id AND temp1.ball_id=extra_runs.ball_id AND temp1.innings_no=extra_runs.innings_no),temp3 AS (SELECT temp2.bowler,temp2.over_id,temp2.match_id,temp2.innings_no,(SUM(runs_scored)+SUM(extra_runs)) AS runs FROM temp2 GROUP BY bowler,over_id,match_id,innings_no),temp4 AS(SELECT wicket_taken.over_id,wicket_taken.match_id,wicket_taken.innings_no,COUNT(kind_out) AS out FROM wicket_taken GROUP BY over_id,match_id,innings_no),temp5 AS (SELECT temp3.runs,temp3.bowler,temp3.over_id,temp3.match_id,temp3.innings_no,CASE WHEN temp4.out is NULL THEN 0 ELSE temp4.out END AS out FROM temp3 LEFT OUTER JOIN temp4 ON temp3.over_id=temp4.over_id AND temp3.match_id=temp4.match_id AND temp3.innings_no=temp4.innings_no), temp7 AS (SELECT SUM(runs) AS run, SUM(out) AS out,bowler FROM temp5 WHERE out <> 0 GROUP BY bowler)
SELECT player.player_name FROM temp7 INNER JOIN player ON player.player_id=temp7.bowler ORDER BY CAST(temp7.run AS DECIMAL) /temp7.out LIMIT 1
WITH temp1 AS(SELECT player_id,match_id,team_id,role FROM player_match WHERE role='CaptainKeeper'), temp2 AS(SELECT temp1.player_id AS player_id,temp1.match_id AS match_id,temp1.team_id AS team_id FROM temp1 INNER JOIN match ON temp1.match_id=match.match_id AND temp1.team_id=match.match_winner),temp3 AS (SELECT team.name AS name,temp2.player_id FROM team INNER JOIN temp2 ON temp2.team_id=team.team_id),temp4 AS (SELECT player.player_name AS player_name,temp3.name AS name FROM player INNER JOIN temp3 ON temp3.player_id=player.player_id) SELECT * FROM temp4 ORDER BY player_name,name
WITH temp1 AS(SELECT ball_by_ball.match_id AS match_id,ball_by_ball.over_id AS over_id,ball_by_ball.ball_id AS ball_id,ball_by_ball.innings_no AS inning_no,ball_by_ball.striker AS player_id,batsman_scored.runs_scored FROM ball_by_ball INNER JOIN batsman_scored ON ball_by_ball.match_id=batsman_scored.match_id AND ball_by_ball.over_id=batsman_scored.over_id AND ball_by_ball.ball_id=batsman_scored.ball_id AND ball_by_ball.innings_no=batsman_scored.innings_no),temp2 AS (SELECT player_id,SUM(runs_scored) AS score FROM temp1 GROUP BY player_id,match_id),temp3 AS (SELECT player.player_name,temp2.player_id,temp2.score  FROM temp2 INNER JOIN player ON player.player_id=temp2.player_id WHERE temp2.score>=50),temp4 AS (SELECT player_id,SUM(temp2.score) AS runs_scored FROM temp2 GROUP BY player_id) SELECT DISTINCT temp3.player_name,temp4.runs_scored FROM temp4 INNER JOIN temp3 on temp3.player_id=temp4.player_id ORDER BY temp4.runs_scored DESC
WITH temp1 AS(SELECT ball_by_ball.match_id AS match_id,ball_by_ball.over_id AS over_id,ball_by_ball.ball_id AS ball_id,ball_by_ball.innings_no AS inning_no,ball_by_ball.team_batting AS team_batting,ball_by_ball.striker AS player_id,batsman_scored.runs_scored FROM ball_by_ball INNER JOIN batsman_scored ON ball_by_ball.match_id=batsman_scored.match_id AND ball_by_ball.over_id=batsman_scored.over_id AND ball_by_ball.ball_id=batsman_scored.ball_id AND ball_by_ball.innings_no=batsman_scored.innings_no),temp2 AS (SELECT player_id,SUM(runs_scored) AS score ,match_id,team_batting AS team_id FROM temp1 GROUP BY player_id,match_id,team_batting),temp3 AS (SELECT temp2.player_id,temp2.score,temp2.match_id,temp2.team_id AS team_id,match.match_winner FROM temp2 INNER JOIN match ON temp2.match_id=match.match_id) SELECT player.player_name FROM temp3 INNER JOIN player ON player.player_id=temp3.player_id WHERE temp3.score>=100 AND temp3.match_winner <> temp3.team_id ORDER BY player.player_name
SELECT match_id,venue FROM match WHERE match_winner <> 1 AND (team_1=1 OR team_2=1) ORDER BY match_id
WITH tab AS(SELECT ball_by_ball.match_id,ball_by_ball.striker,ball_by_ball.non_striker FROM ball_by_ball INNER JOIN match ON ball_by_ball.match_id = match.match_id AND match.season_id = '5'), cte AS(SELECT tab.match_id as match_id,tab.striker as striker FROM tab UNION ALL SELECT tab.match_id,tab.non_striker FROM tab), temp AS (SELECT striker,count(DISTINCT match_id) AS total_match_bat FROM cte GROUP BY striker) SELECT t1.striker,t4.player_name,sum(runs_scored),t5.total_match_bat,CAST(sum(runs_scored) AS DECIMAL) / t5.total_match_bat AS batting_average FROM ball_by_ball t1 INNER JOIN  match t2 ON t1.match_id = t2.match_id AND t2.season_id = '5' INNER JOIN batsman_scored t3 ON t1.match_id = t3.match_id AND t1.over_id = t3.over_id AND t1.ball_id = t3.ball_id AND t1.innings_no = t3.innings_no INNER JOIN player t4 ON t1.striker = t4.player_id INNER JOIN temp t5 ON t1.striker = t5.striker GROUP BY t1.striker,t4.player_name,t5.total_match_bat ORDER BY CAST(sum(runs_scored) AS DECIMAL) / t5.total_match_bat DESC LIMIT 10
21.



